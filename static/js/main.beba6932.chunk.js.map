{"version":3,"sources":["components/Navbar/index.js","components/Header/index.js","components/Button/index.js","components/Game/index.js","App.js","index.js"],"names":["Navbar","props","className","success","currentScore","topScore","Header","Component","Button","onClick","handler","alt","name","src","id","tempJSON","Games","state","clickedArray","randomizeJoJos","temporaryValue","randomIndex","currentIndex","jojos","length","Math","floor","random","handleButtonClick","event","target","indexOf","tempClicked","push","setState","console","log","this","Container","Row","Col","image","App","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.beba6932.chunk.js","sourcesContent":["import React from 'react';\r\nimport \"./style.css\";\r\n\r\nfunction Navbar(props) {\r\n    return (\r\n        <nav className=\"navbar nav navbar-static-top\">\r\n            <div>\r\n                <li className=\"navbar-left\">Click an image to begin!</li>\r\n            </div>\r\n            <div>\r\n                <li className=\"navbar-center\">{(props.success === null) ? '' : props.success ? 'You guessed correctly!' : 'You guessed incorrectly!'}</li>\r\n            </div>\r\n            <div>\r\n                <li className=\"navbar-right\">Score: {props.currentScore} | Top Score: {props.topScore}</li>\r\n            </div>\r\n        </nav>\r\n    )\r\n}\r\n\r\nexport default Navbar;","import React, {Component} from 'react';\r\nimport \"./style.css\";\r\n\r\nexport default class Header extends Component {\r\n    render() {\r\n        return (\r\n            <div>\r\n                <h1 className=\"text-center\">\r\n                    JoJo's Bizarre Clicky-Game\r\n                </h1>\r\n                <h3 className=\"text-center\">\r\n                    Click on an image to earn points, but don't click on any more than once!\r\n                </h3>\r\n            </div>\r\n        )\r\n    }\r\n}","import React from 'react';\r\nimport './style.css';\r\n\r\nfunction Button(props) {\r\n    return (\r\n        <img onClick={props.handler} alt={props.name} src={props.src} id={props.id}/>\r\n    )\r\n}\r\n\r\nexport default Button;","import React, {Component} from 'react';\r\nimport {Col, Row, Container} from 'react-bootstrap';\r\nimport Navbar from '../Navbar';\r\nimport Header from '../Header';\r\nimport Button from '../Button';\r\nimport jojos from '../../jojos.json';\r\nvar tempJSON = [];\r\n\r\nexport default class Games extends Component {\r\n // Initialize state\r\n    state = {\r\n        currentScore: 0,\r\n        topScore: 0,\r\n        clickedArray: [],\r\n        success: null\r\n    };\r\n\r\n    // Initialize buttons on load\r\n    UNSAFE_componentWillMount() {\r\n        this.randomizeJoJos();\r\n    }\r\n\r\n    // Randomize the contents of the JoJos JSON\r\n    randomizeJoJos = () => {\r\n        // Make a temp copy of the JoJos JSON\r\n        tempJSON = jojos;\r\n\r\n        // Randomize numbers 0-11\r\n        var currentIndex = tempJSON.length, temporaryValue, randomIndex;\r\n        \r\n        // While there remain elements to shuffle\r\n        while (0 !== currentIndex) {\r\n        \r\n            // Pick a remaining element\r\n            randomIndex = Math.floor(Math.random() * currentIndex);\r\n            currentIndex -= 1;\r\n        \r\n            // And swap it with the current element\r\n            temporaryValue = tempJSON[currentIndex];\r\n            tempJSON[currentIndex] = tempJSON[randomIndex];\r\n            tempJSON[randomIndex] = temporaryValue;\r\n        }\r\n    }\r\n\r\n    // Check the click against already clicked images to score, and then randomize again\r\n    handleButtonClick = event => {\r\n        // Capture ID of JoJo clicked\r\n        const {id} = event.target;\r\n\r\n        // If this JoJo hasn't been clicked before...\r\n        if (this.state.clickedArray.indexOf(id) === -1){\r\n            var tempClicked = this.state.clickedArray;\r\n            tempClicked.push(id);\r\n            // If currentScore equals topScore, increase both scores and push ID to clickedArray\r\n            if (this.state.currentScore === this.state.topScore) {\r\n                this.setState({\r\n                    topScore: this.state.topScore + 1,\r\n                    currentScore: this.state.currentScore + 1,\r\n                    clickedArray: tempClicked,\r\n                    success: true\r\n                });\r\n                console.log(this.state.success);\r\n            }\r\n            // Else, increase currentScore and push ID to clicked array\r\n            else {\r\n                this.setState({\r\n                    currentScore: this.state.currentScore + 1,\r\n                    clickedArray: tempClicked,\r\n                    success: true\r\n                });\r\n                console.log(this.state.success);\r\n            }\r\n        }\r\n        // Else, player loses; reset currentScore and clickedArray\r\n        else {\r\n            this.setState({\r\n                currentScore: 0,\r\n                clickedArray: [],\r\n                success: false\r\n            });\r\n            console.log(this.state.success);\r\n        }\r\n\r\n        // Randomize JoJos again\r\n        this.randomizeJoJos();\r\n    }\r\n\r\n    render() {\r\n        return (\r\n            <div>\r\n                <Navbar\r\n                    currentScore={this.state.currentScore}\r\n                    topScore={this.state.topScore}\r\n                    success={this.state.success} />\r\n                <Header />\r\n                <Container className=\"justify-content-md-center\">\r\n                    <Row className=\"\">\r\n                        <Col className=\"col-2\"></Col>\r\n                        <Col className=\"col-2\">\r\n                            <Button handler={this.handleButtonClick}\r\n                                src={tempJSON[0].image}\r\n                                name={tempJSON[0].name}\r\n                                id={tempJSON[0].id}/>\r\n                        </Col>\r\n                        <Col className=\"col-2\">\r\n                            <Button handler={this.handleButtonClick}\r\n                                src={tempJSON[1].image}\r\n                                name={tempJSON[1].name}\r\n                                id={tempJSON[1].id}/>\r\n                        </Col>\r\n                        <Col className=\"col-2\">\r\n                            <Button handler={this.handleButtonClick}\r\n                            src={tempJSON[2].image}\r\n                            name={tempJSON[2].name}\r\n                            id={tempJSON[2].id}/>\r\n                        </Col>\r\n                        <Col className=\"col-2\">\r\n                            <Button handler={this.handleButtonClick}\r\n                            src={tempJSON[3].image}\r\n                            name={tempJSON[3].name}\r\n                            id={tempJSON[3].id}/>\r\n                        </Col>\r\n                        <Col className=\"col-2\"></Col>\r\n                    </Row>\r\n                    <Row className=\"\">\r\n                        <Col className=\"col-2\"></Col>\r\n                        <Col className=\"col-2\">\r\n                            <Button handler={this.handleButtonClick}\r\n                            src={tempJSON[4].image}\r\n                            name={tempJSON[4].name}\r\n                            id={tempJSON[4].id}/>\r\n                        </Col>\r\n                        <Col className=\"col-2\">\r\n                            <Button handler={this.handleButtonClick}\r\n                            src={tempJSON[5].image}\r\n                            name={tempJSON[5].name}\r\n                            id={tempJSON[5].id}/>\r\n                        </Col>\r\n                        <Col className=\"col-2\">\r\n                            <Button handler={this.handleButtonClick}\r\n                            src={tempJSON[6].image}\r\n                            name={tempJSON[6].name}\r\n                            id={tempJSON[6].id}/>\r\n                        </Col>\r\n                        <Col className=\"col-2\">\r\n                            <Button handler={this.handleButtonClick}\r\n                            src={tempJSON[7].image}\r\n                            name={tempJSON[7].name}\r\n                            id={tempJSON[7].id}/>\r\n                        </Col>\r\n                        <Col className=\"col-2\"></Col>\r\n                    </Row>\r\n                    <Row className=\"\">\r\n                        <Col className=\"col-2\"></Col>\r\n                        <Col className=\"col-2\">\r\n                            <Button handler={this.handleButtonClick}\r\n                            src={tempJSON[8].image}\r\n                            name={tempJSON[8].name}\r\n                            id={tempJSON[8].id}/>\r\n                        </Col>\r\n                        <Col className=\"col-2\">\r\n                            <Button handler={this.handleButtonClick}\r\n                            src={tempJSON[9].image}\r\n                            name={tempJSON[9].name}\r\n                            id={tempJSON[9].id}/>\r\n                        </Col>\r\n                        <Col className=\"col-2\">\r\n                            <Button handler={this.handleButtonClick}\r\n                            src={tempJSON[10].image}\r\n                            name={tempJSON[10].name}\r\n                            id={tempJSON[10].id}/>\r\n                        </Col>\r\n                        <Col className=\"col-2\">\r\n                            <Button handler={this.handleButtonClick}\r\n                            src={tempJSON[11].image}\r\n                            name={tempJSON[11].name}\r\n                            id={tempJSON[11].id}/>\r\n                        </Col>\r\n                        <Col className=\"col-2\"></Col>\r\n                    </Row>\r\n                </Container>\r\n            </div>\r\n        )\r\n    }\r\n}","import React from 'react';\nimport Game from '../src/components/Game';\nimport './App.css';\n\nfunction App() {\n  return (\n    <Game />\n  );\n}\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\n\nReactDOM.render(<App />, document.getElementById('root'));\n"],"sourceRoot":""}